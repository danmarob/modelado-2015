'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by SpecFlow (http://www.specflow.org/).
'     SpecFlow Version:1.9.0.77
'     SpecFlow Generator Version:1.9.0.0
'     Runtime Version:4.0.30319.18444
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------
#Region "Designer generated code"
'#pragma warning disable
Imports TechTalk.SpecFlow

Namespace BusquedaSencilla.Specs
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77"),  _
     System.Runtime.CompilerServices.CompilerGeneratedAttribute(),  _
     Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()>  _
    Partial Public Class CompletitudDeBuildsFeature
        
        Private Shared testRunner As TechTalk.SpecFlow.ITestRunner
        
#ExternalSource("CompletitudDeBuilds.feature",1)
#End ExternalSource
        
        <Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()>  _
        Public Shared Sub FeatureSetup(ByVal testContext As Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner
            Dim featureInfo As TechTalk.SpecFlow.FeatureInfo = New TechTalk.SpecFlow.FeatureInfo(New System.Globalization.CultureInfo("es-ES"), "CompletitudDeBuilds", "Como un administrador de builds"&Global.Microsoft.VisualBasic.ChrW(10)&"Quiero conocer cuáles soluciones .NET no tienen u"& _ 
                    "n Build"&Global.Microsoft.VisualBasic.ChrW(10)&"Con el fin de valorar la completitud.", ProgrammingLanguage.VB, CType(Nothing,String()))
            testRunner.OnFeatureStart(featureInfo)
        End Sub
        
        <Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()>  _
        Public Shared Sub FeatureTearDown()
            testRunner.OnFeatureEnd
            testRunner = Nothing
        End Sub
        
        <Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()>  _
        Public Overridable Sub TestInitialize()
            If ((Not (TechTalk.SpecFlow.FeatureContext.Current) Is Nothing)  _
                        AndAlso (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title <> "CompletitudDeBuilds")) Then
                BusquedaSencilla.Specs.CompletitudDeBuildsFeature.FeatureSetup(Nothing)
            End If
        End Sub
        
        <Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()>  _
        Public Overridable Sub ScenarioTearDown()
            testRunner.OnScenarioEnd
        End Sub
        
        Public Overridable Sub ScenarioSetup(ByVal scenarioInfo As TechTalk.SpecFlow.ScenarioInfo)
            testRunner.OnScenarioStart(scenarioInfo)
        End Sub
        
        Public Overridable Sub ScenarioCleanup()
            testRunner.CollectScenarioErrors
        End Sub
        
        <Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute(),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Hallar soluciones en un repositorio"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CompletitudDeBuilds"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("mytag")>  _
        Public Overridable Sub HallarSolucionesEnUnRepositorio()
            Dim scenarioInfo As TechTalk.SpecFlow.ScenarioInfo = New TechTalk.SpecFlow.ScenarioInfo("Hallar soluciones en un repositorio", New String() {"mytag"})
#ExternalSource("CompletitudDeBuilds.feature",9)
Me.ScenarioSetup(scenarioInfo)
#End ExternalSource
            Dim table1 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"Ruta en el repositorio"})
            table1.AddRow(New String() {"$/vss/proyecto1/proyecto1.sln"})
            table1.AddRow(New String() {"$/vss/proyecto2/proyecto2.sln"})
            table1.AddRow(New String() {"$/vss/proyecton/proyecton.sln"})
#ExternalSource("CompletitudDeBuilds.feature",10)
 testRunner.Given("las siguientes soluciones", CType(Nothing,String), table1, "Dadas ")
#End ExternalSource
            Dim table2 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"Nombre del build", "Ruta que monitorea"})
            table2.AddRow(New String() {"proyecto1", "$/vss/proyecto1/proyecto1.sln"})
            table2.AddRow(New String() {"proyecto2", "$/vss/proyecto2/proyecto2.sln"})
#ExternalSource("CompletitudDeBuilds.feature",15)
 testRunner.And("los siguientes builds", CType(Nothing,String), table2, "Y ")
#End ExternalSource
#ExternalSource("CompletitudDeBuilds.feature",20)
 testRunner.When("analizo la completitud", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Cuando ")
#End ExternalSource
            Dim table3 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"Ruta en el repositorio"})
            table3.AddRow(New String() {"$/vss/proyecton/proyecton.sln"})
#ExternalSource("CompletitudDeBuilds.feature",21)
 testRunner.Then("las siguientes soluciones no tienen build", CType(Nothing,String), table3, "Entonces ")
#End ExternalSource
            Me.ScenarioCleanup
        End Sub
    End Class
End Namespace
'#pragma warning restore
#End Region
