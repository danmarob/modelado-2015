'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18444
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="BCCRLiberaciones")>  _
Partial Public Class LASDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertProyecto(instance As Proyecto)
    End Sub
  Partial Private Sub UpdateProyecto(instance As Proyecto)
    End Sub
  Partial Private Sub DeleteProyecto(instance As Proyecto)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.Tfs.BusquedaSencilla.Database.My.MySettings.Default.BCCRLiberacionesConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Proyectos() As System.Data.Linq.Table(Of Proyecto)
		Get
			Return Me.GetTable(Of Proyecto)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Proyecto")>  _
Partial Public Class Proyecto
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdProyecto As Integer
	
	Private _Nombre As String
	
	Private _RutaControladorVersiones As String
	
	Private _Version As Double
	
	Private _Fecha As Date
	
	Private _CCNetProjectUrl As String
	
	Private _ServidorCCNET As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdProyectoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdProyectoChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnRutaControladorVersionesChanging(value As String)
    End Sub
    Partial Private Sub OnRutaControladorVersionesChanged()
    End Sub
    Partial Private Sub OnVersionChanging(value As Double)
    End Sub
    Partial Private Sub OnVersionChanged()
    End Sub
    Partial Private Sub OnFechaChanging(value As Date)
    End Sub
    Partial Private Sub OnFechaChanged()
    End Sub
    Partial Private Sub OnCCNetProjectUrlChanging(value As String)
    End Sub
    Partial Private Sub OnCCNetProjectUrlChanged()
    End Sub
    Partial Private Sub OnServidorCCNETChanging(value As String)
    End Sub
    Partial Private Sub OnServidorCCNETChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdProyecto", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdProyecto() As Integer
		Get
			Return Me._IdProyecto
		End Get
		Set
			If ((Me._IdProyecto = value)  _
						= false) Then
				Me.OnIdProyectoChanging(value)
				Me.SendPropertyChanging
				Me._IdProyecto = value
				Me.SendPropertyChanged("IdProyecto")
				Me.OnIdProyectoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre", DbType:="VarChar(512) NOT NULL", CanBeNull:=false)>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RutaControladorVersiones", DbType:="VarChar(512)")>  _
	Public Property RutaControladorVersiones() As String
		Get
			Return Me._RutaControladorVersiones
		End Get
		Set
			If (String.Equals(Me._RutaControladorVersiones, value) = false) Then
				Me.OnRutaControladorVersionesChanging(value)
				Me.SendPropertyChanging
				Me._RutaControladorVersiones = value
				Me.SendPropertyChanged("RutaControladorVersiones")
				Me.OnRutaControladorVersionesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Version", DbType:="Float NOT NULL")>  _
	Public Property Version() As Double
		Get
			Return Me._Version
		End Get
		Set
			If ((Me._Version = value)  _
						= false) Then
				Me.OnVersionChanging(value)
				Me.SendPropertyChanging
				Me._Version = value
				Me.SendPropertyChanged("Version")
				Me.OnVersionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha", DbType:="DateTime NOT NULL")>  _
	Public Property Fecha() As Date
		Get
			Return Me._Fecha
		End Get
		Set
			If ((Me._Fecha = value)  _
						= false) Then
				Me.OnFechaChanging(value)
				Me.SendPropertyChanging
				Me._Fecha = value
				Me.SendPropertyChanged("Fecha")
				Me.OnFechaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CCNetProjectUrl", DbType:="VarChar(1024) NOT NULL", CanBeNull:=false)>  _
	Public Property CCNetProjectUrl() As String
		Get
			Return Me._CCNetProjectUrl
		End Get
		Set
			If (String.Equals(Me._CCNetProjectUrl, value) = false) Then
				Me.OnCCNetProjectUrlChanging(value)
				Me.SendPropertyChanging
				Me._CCNetProjectUrl = value
				Me.SendPropertyChanged("CCNetProjectUrl")
				Me.OnCCNetProjectUrlChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ServidorCCNET", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property ServidorCCNET() As String
		Get
			Return Me._ServidorCCNET
		End Get
		Set
			If (String.Equals(Me._ServidorCCNET, value) = false) Then
				Me.OnServidorCCNETChanging(value)
				Me.SendPropertyChanging
				Me._ServidorCCNET = value
				Me.SendPropertyChanged("ServidorCCNET")
				Me.OnServidorCCNETChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
